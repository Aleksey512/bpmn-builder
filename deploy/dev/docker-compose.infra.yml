version: '3.9'

services:
  postgres:
    image: postgres:16
    container_name: spd-database
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spd-network

  redis:
    image: redis:7.2
    container_name: spd-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--save", "" ]
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - spd-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: spd-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - spd-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  spd-network:
    driver: bridge
